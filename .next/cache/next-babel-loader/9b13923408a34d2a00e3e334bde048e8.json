{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/jaredgorski/Projects/Personal/civdocs/civdocs.us/pages/docs/[document]/index.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../../components/layout';\n\nvar DocSectionIndex = function DocSectionIndex(urlPrefix, sectionsTotal) {\n  var sections = [];\n\n  for (var i = 1; i <= sectionsTotal; i++) {\n    sections.push({\n      url: \"\".concat(urlPrefix, \"/\").concat(i),\n      title: i\n    });\n  }\n\n  return __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, sections.map(function (section, index) {\n    return __jsx(\"li\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      href: section.url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }, section.title));\n  }));\n};\n\n_c = DocSectionIndex;\n\nvar DocPage = function DocPage(_ref) {\n  var data = _ref.data,\n      documentParam = _ref.documentParam;\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 3\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, data.title), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, data.author), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, data.description), DocSectionIndex(\"/docs/\".concat(documentParam), data.sections_total));\n};\n\n_c2 = DocPage;\nexport var __N_SSP = true;\nexport default DocPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DocSectionIndex\");\n$RefreshReg$(_c2, \"DocPage\");","map":{"version":3,"sources":["/Users/jaredgorski/Projects/Personal/civdocs/civdocs.us/pages/docs/[document]/index.tsx"],"names":["Layout","DocSectionIndex","urlPrefix","sectionsTotal","sections","i","push","url","title","map","section","index","DocPage","data","documentParam","author","description","sections_total"],"mappings":";;;;;AACA,OAAOA,MAAP,MAAmB,4BAAnB;;AAIA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,SAAD,EAAYC,aAAZ,EAA8B;AACpD,MAAIC,QAAQ,GAAG,EAAf;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIF,aAArB,EAAoCE,CAAC,EAArC,EAAyC;AACvCD,IAAAA,QAAQ,CAACE,IAAT,CAAc;AACZC,MAAAA,GAAG,YAAKL,SAAL,cAAkBG,CAAlB,CADS;AAEZG,MAAAA,KAAK,EAAEH;AAFK,KAAd;AAID;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,CAACK,GAAT,CAAa,UAACC,OAAD,EAAUC,KAAV;AAAA,WACZ;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,IAAI,EAAED,OAAO,CAACH,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBG,OAAO,CAACF,KAA/B,CADF,CADY;AAAA,GAAb,CADH,CADF;AASD,CAnBD;;KAAMP,e;;AAqBN,IAAMW,OAAO,GAAG,SAAVA,OAAU;AAAA,MAAEC,IAAF,QAAEA,IAAF;AAAA,MAAQC,aAAR,QAAQA,aAAR;AAAA,SACd,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAI,CAACL,KAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIK,IAAI,CAACE,MAAT,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,IAAI,CAACG,WAAT,CAHF,EAIGf,eAAe,iBAAUa,aAAV,GAA2BD,IAAI,CAACI,cAAhC,CAJlB,CADc;AAAA,CAAhB;;MAAML,O;;AAsBN,eAAeA,OAAf","sourcesContent":["import Link from 'next/link'\nimport Layout from '../../../components/layout'\nimport Doc from '../../../components/doc'\nimport axios from 'axios'\n\nconst DocSectionIndex = (urlPrefix, sectionsTotal) => {\n  let sections = [];\n\n  for (let i = 1; i <= sectionsTotal; i++) {\n    sections.push({\n      url: `${urlPrefix}/${i}`,\n      title: i,\n    });\n  }\n\n  return (\n    <ul>\n      {sections.map((section, index) => (\n        <li key={index}>\n          <a href={section.url}>{section.title}</a>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nconst DocPage = ({data, documentParam}) => (\n  <Layout>\n    <h2>{data.title}</h2>\n    <p>{data.author}</p>\n    <p>{data.description}</p>\n    {DocSectionIndex(`/docs/${documentParam}`, data.sections_total)}\n  </Layout>\n)\n\nexport async function getServerSideProps(ctx) {\n  const {params: {document}} = ctx;\n  const req = await axios.get(`http://localhost:7687/docs/${document}?verbose=true`);\n  const data = req.data;\n  delete data.content;\n  return {\n    props: {\n      data,\n      documentParam: document,\n    },\n  };\n}\n\nexport default DocPage\n"]},"metadata":{},"sourceType":"module"}