{"ast":null,"code":"var _jsxFileName = \"/Users/jaredgorski/Projects/Personal/civdocs/civdocs.us/pages/docs/[document]/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../../components/layout';\nimport axios from 'axios';\n\nconst DocSectionIndex = (urlPrefix, sectionsTotal) => {\n  let sections = [];\n\n  for (let i = 1; i <= sectionsTotal; i++) {\n    sections.push({\n      url: `${urlPrefix}/${i}`,\n      title: i\n    });\n  }\n\n  return __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, sections.map((section, index) => __jsx(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    href: section.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, section.title))));\n};\n\nconst DocPage = ({\n  data,\n  documentParam\n}) => __jsx(Layout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }\n}, __jsx(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }\n}, data.title), __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }\n}, data.author), __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }\n}, data.description), DocSectionIndex(`/docs/${documentParam}`, data.sections_total));\n\nexport async function getServerSideProps(ctx) {\n  const {\n    params: {\n      document\n    }\n  } = ctx;\n  const req = await axios.get(`http://localhost:7687/docs/${document}?verbose=true`);\n  const data = req.data;\n  delete data.content;\n  return {\n    props: {\n      data,\n      documentParam: document\n    }\n  };\n}\nexport default DocPage;","map":{"version":3,"sources":["/Users/jaredgorski/Projects/Personal/civdocs/civdocs.us/pages/docs/[document]/index.tsx"],"names":["Layout","axios","DocSectionIndex","urlPrefix","sectionsTotal","sections","i","push","url","title","map","section","index","DocPage","data","documentParam","author","description","sections_total","getServerSideProps","ctx","params","document","req","get","content","props"],"mappings":";;;AACA,OAAOA,MAAP,MAAmB,4BAAnB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,eAAe,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACpD,MAAIC,QAAQ,GAAG,EAAf;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIF,aAArB,EAAoCE,CAAC,EAArC,EAAyC;AACvCD,IAAAA,QAAQ,CAACE,IAAT,CAAc;AACZC,MAAAA,GAAG,EAAG,GAAEL,SAAU,IAAGG,CAAE,EADX;AAEZG,MAAAA,KAAK,EAAEH;AAFK,KAAd;AAID;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,CAACK,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KACZ;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAED,OAAO,CAACH,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBG,OAAO,CAACF,KAA/B,CADF,CADD,CADH,CADF;AASD,CAnBD;;AAqBA,MAAMI,OAAO,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KACd,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKD,IAAI,CAACL,KAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIK,IAAI,CAACE,MAAT,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIF,IAAI,CAACG,WAAT,CAHF,EAIGf,eAAe,CAAE,SAAQa,aAAc,EAAxB,EAA2BD,IAAI,CAACI,cAAhC,CAJlB,CADF;;AASA,OAAO,eAAeC,kBAAf,CAAkCC,GAAlC,EAAuC;AAC5C,QAAM;AAACC,IAAAA,MAAM,EAAE;AAACC,MAAAA;AAAD;AAAT,MAAuBF,GAA7B;AACA,QAAMG,GAAG,GAAG,MAAMtB,KAAK,CAACuB,GAAN,CAAW,8BAA6BF,QAAS,eAAjD,CAAlB;AACA,QAAMR,IAAI,GAAGS,GAAG,CAACT,IAAjB;AACA,SAAOA,IAAI,CAACW,OAAZ;AACA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLZ,MAAAA,IADK;AAELC,MAAAA,aAAa,EAAEO;AAFV;AADF,GAAP;AAMD;AAED,eAAeT,OAAf","sourcesContent":["import Link from 'next/link'\nimport Layout from '../../../components/layout'\nimport Doc from '../../../components/doc'\nimport axios from 'axios'\n\nconst DocSectionIndex = (urlPrefix, sectionsTotal) => {\n  let sections = [];\n\n  for (let i = 1; i <= sectionsTotal; i++) {\n    sections.push({\n      url: `${urlPrefix}/${i}`,\n      title: i,\n    });\n  }\n\n  return (\n    <ul>\n      {sections.map((section, index) => (\n        <li key={index}>\n          <a href={section.url}>{section.title}</a>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nconst DocPage = ({data, documentParam}) => (\n  <Layout>\n    <h2>{data.title}</h2>\n    <p>{data.author}</p>\n    <p>{data.description}</p>\n    {DocSectionIndex(`/docs/${documentParam}`, data.sections_total)}\n  </Layout>\n)\n\nexport async function getServerSideProps(ctx) {\n  const {params: {document}} = ctx;\n  const req = await axios.get(`http://localhost:7687/docs/${document}?verbose=true`);\n  const data = req.data;\n  delete data.content;\n  return {\n    props: {\n      data,\n      documentParam: document,\n    },\n  };\n}\n\nexport default DocPage\n"]},"metadata":{},"sourceType":"module"}